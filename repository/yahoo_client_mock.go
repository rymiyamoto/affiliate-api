// Code generated by MockGen. DO NOT EDIT.
// Source: yahoo_client.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIYahooClient is a mock of IYahooClient interface.
type MockIYahooClient struct {
	ctrl     *gomock.Controller
	recorder *MockIYahooClientMockRecorder
}

// MockIYahooClientMockRecorder is the mock recorder for MockIYahooClient.
type MockIYahooClientMockRecorder struct {
	mock *MockIYahooClient
}

// NewMockIYahooClient creates a new mock instance.
func NewMockIYahooClient(ctrl *gomock.Controller) *MockIYahooClient {
	mock := &MockIYahooClient{ctrl: ctrl}
	mock.recorder = &MockIYahooClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIYahooClient) EXPECT() *MockIYahooClientMockRecorder {
	return m.recorder
}

// GetProduct mocks base method.
func (m *MockIYahooClient) GetProduct(code string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProduct", code)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetProduct indicates an expected call of GetProduct.
func (mr *MockIYahooClientMockRecorder) GetProduct(code interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProduct", reflect.TypeOf((*MockIYahooClient)(nil).GetProduct), code)
}
