// Code generated by MockGen. DO NOT EDIT.
// Source: rakuten_client.go

// Package repository is a generated GoMock package.
package repository

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIRakutenClient is a mock of IRakutenClient interface.
type MockIRakutenClient struct {
	ctrl     *gomock.Controller
	recorder *MockIRakutenClientMockRecorder
}

// MockIRakutenClientMockRecorder is the mock recorder for MockIRakutenClient.
type MockIRakutenClientMockRecorder struct {
	mock *MockIRakutenClient
}

// NewMockIRakutenClient creates a new mock instance.
func NewMockIRakutenClient(ctrl *gomock.Controller) *MockIRakutenClient {
	mock := &MockIRakutenClient{ctrl: ctrl}
	mock.recorder = &MockIRakutenClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIRakutenClient) EXPECT() *MockIRakutenClientMockRecorder {
	return m.recorder
}

// GetProduct mocks base method.
func (m *MockIRakutenClient) GetProduct() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetProduct")
	ret0, _ := ret[0].(error)
	return ret0
}

// GetProduct indicates an expected call of GetProduct.
func (mr *MockIRakutenClientMockRecorder) GetProduct() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetProduct", reflect.TypeOf((*MockIRakutenClient)(nil).GetProduct))
}
