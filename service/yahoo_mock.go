// Code generated by MockGen. DO NOT EDIT.
// Source: yahoo.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	flag "github.com/rymiyamoto/affiliate-api/flag"
)

// MockIYahoo is a mock of IYahoo interface.
type MockIYahoo struct {
	ctrl     *gomock.Controller
	recorder *MockIYahooMockRecorder
}

// MockIYahooMockRecorder is the mock recorder for MockIYahoo.
type MockIYahooMockRecorder struct {
	mock *MockIYahoo
}

// NewMockIYahoo creates a new mock instance.
func NewMockIYahoo(ctrl *gomock.Controller) *MockIYahoo {
	mock := &MockIYahoo{ctrl: ctrl}
	mock.recorder = &MockIYahooMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIYahoo) EXPECT() *MockIYahooMockRecorder {
	return m.recorder
}

// Exec mocks base method.
func (m *MockIYahoo) Exec(f *flag.Affiliate) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Exec", f)
	ret0, _ := ret[0].(error)
	return ret0
}

// Exec indicates an expected call of Exec.
func (mr *MockIYahooMockRecorder) Exec(f interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Exec", reflect.TypeOf((*MockIYahoo)(nil).Exec), f)
}
